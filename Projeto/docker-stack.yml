version: "3.9"
services:
  app:
    build:
      args:
        user: laravel
        uid: 1000
      context: ./
      dockerfile: .docker/Dockerfile
    image: laravel
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - mynetwork
    volumes:
      - type: bind
        source: ./
        target: /var/www
    working_dir: /var/www/
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0.30
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - type: bind
        source: ./.docker/mysql/data
        target: /var/lib/mysql
    networks:
      - mynetwork

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 8081:80
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - mynetwork
    depends_on:
      - mysql

  nginx:
    image: nginx:alpine
    ports:
      - 8080:80
    volumes:
      - type: bind
        source: ./
        target: /var/www
      - type: bind
        source: ./.docker/nginx
        target: /etc/nginx/conf.d
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - mynetwork
    depends_on:
      - app

  redis:
    image: redis:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: overlay
